- name: run local terraform
  hosts: localhost
  connection: local
  tasks:
    - name: Run terraform
      terraform:
        project_path: "./tf"
        force_init: yes
        state: present
      register: trfrm

    - name: Add host
      add_host:
        name: w_bot
        groups: nodes
        ansible_host: "{{ trfrm.outputs.instance_ip_addr.value }}"
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

- name: Wait for SSH port to be available
  hosts: localhost
  connection: local
  tasks:
    - name: Wait for w_bot port 22
      wait_for:
        host: "{{ trfrm.outputs.instance_ip_addr.value }}"
        port: 22

- name: Deploy Application with docker
  hosts: w_bot
  vars:
    daemon_json: "{{ daemon_conf | regex_replace('j2$', 'json') }}"
  tasks:
    - name: Update apt package cache
      apt:
        update_cache: yes
      become: true

    - name: Add key GPG Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add The Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Docker Installation
      apt:
        name: docker-ce
        state: present

    - name: Install python3-pip
      apt:
        name: python3-pip
        state: present

    - name: Copy directory project
      copy:
        src: "{{ daemon_json }}"
        dest: /etc/docker

    - name: Pull Docker image
      docker_image:
        name: 192.168.199.17:5001/w_bot/bot
        source: pull

    - name: Ensure project directory exists
      file:
        path: /home/ubuntu/project
        state: directory

    - name: Run Docker container
      docker_container:
        name: bot
        image: 192.168.199.17:5001/w_bot/bot
        state: started
        restart_policy: always
        volumes:
           - "/home/ubuntu/project:/app"
